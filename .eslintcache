[{"E:\\Project\\InventoryApp\\inventory-web\\src\\index.js":"1","E:\\Project\\InventoryApp\\inventory-web\\src\\App.js":"2","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\reducer.js":"3","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\search.js":"4","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\HomePage.js":"5","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\reducer.js":"6","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\reducer.js":"7","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\company.js":"8","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\device.js":"9","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\Nav.js":"10","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\band.js":"11","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\table.js":"12","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\SideNav.js":"13","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\type.js":"14","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\action.js":"15","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\DataCard.js":"16","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\type.js":"17","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\action.js":"18","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\action.js":"19","E:\\Project\\InventoryApp\\inventory-web\\src\\config\\apconfig.js":"20"},{"size":519,"mtime":1608120828589,"results":"21","hashOfConfig":"22"},{"size":777,"mtime":1608619782019,"results":"23","hashOfConfig":"22"},{"size":479,"mtime":1608295553523,"results":"24","hashOfConfig":"22"},{"size":1223,"mtime":1608295553521,"results":"25","hashOfConfig":"22"},{"size":324,"mtime":1608120828621,"results":"26","hashOfConfig":"22"},{"size":687,"mtime":1608287106095,"results":"27","hashOfConfig":"22"},{"size":737,"mtime":1608295553525,"results":"28","hashOfConfig":"22"},{"size":1910,"mtime":1608619879256,"results":"29","hashOfConfig":"22"},{"size":1958,"mtime":1608616555263,"results":"30","hashOfConfig":"22"},{"size":795,"mtime":1608187360396,"results":"31","hashOfConfig":"22"},{"size":492,"mtime":1608295553517,"results":"32","hashOfConfig":"22"},{"size":9567,"mtime":1608616776510,"results":"33","hashOfConfig":"22"},{"size":1294,"mtime":1608286634961,"results":"34","hashOfConfig":"22"},{"size":195,"mtime":1608120828636,"results":"35","hashOfConfig":"22"},{"size":68,"mtime":1608295553521,"results":"36","hashOfConfig":"22"},{"size":2363,"mtime":1608619012144,"results":"37","hashOfConfig":"22"},{"size":177,"mtime":1608287069521,"results":"38","hashOfConfig":"22"},{"size":889,"mtime":1608553357647,"results":"39","hashOfConfig":"22"},{"size":809,"mtime":1608619361495,"results":"40","hashOfConfig":"22"},{"size":187,"mtime":1608120828589,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"yu3cy0",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"E:\\Project\\InventoryApp\\inventory-web\\src\\index.js",[],["87","88"],"E:\\Project\\InventoryApp\\inventory-web\\src\\App.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\reducer.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\search.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\HomePage.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\reducer.js",["89"],"import {\r\n  FETCH_DATACARD_FAILURE,\r\n  FETCH_DATACARD_REQUEST,\r\n  FETCH_DATACARD_SUCCESS,\r\n} from \"./type\";\r\n\r\nexport default (\r\n  state = {\r\n    isLoading: false,\r\n    error: null,\r\n    data: [],\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case FETCH_DATACARD_REQUEST:\r\n      return { ...state, isLoading: true };\r\n    case FETCH_DATACARD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        error: null,\r\n      };\r\n    case FETCH_DATACARD_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload,\r\n        data: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\reducer.js",["90"],"import {\r\n    FETCH_TABLE_FAILURE,\r\n    FETCH_TABLE_REQUEST,\r\n    FETCH_TABLE_SUCCESS,\r\n  } from \"./type\";\r\n  \r\n  export default (\r\n    state = {\r\n      isLoading: false,\r\n      error: null,\r\n      data:[]\r\n    },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case FETCH_TABLE_REQUEST:\r\n        return { ...state, isLoading: true };\r\n      case FETCH_TABLE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          data: action.payload,\r\n          error: null,\r\n        };\r\n      case FETCH_TABLE_FAILURE:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          error: action.payload,\r\n          data: [],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\company.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\device.js",["91"],"import React, { useEffect } from \"react\";\r\nimport DataCard from \"../components/DataCard\";\r\nimport Table from \"../components/table\";\r\nimport Band from \"../components/band\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchDataCard } from \"../redux/action\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { fetchTable } from \"../redux/action\";\r\n\r\nexport default function Device() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchDataCard(\"dashboard/device/inventory\"));\r\n    dispatch(fetchTable(\"dashboard/company/status\", { device: \"BaconBit\" }));\r\n  }, [dispatch]);\r\n\r\n  const data = useSelector((state) => state.table.data);\r\n\r\n  const columns = [\r\n    { field: \"name\", header: \"Name\" },\r\n    { field: \"location\", header: \"Location\" },\r\n    { field: \"status\", header: \"Status\" },\r\n    { field: \"count\", header: \"Count\" },\r\n  ];\r\n\r\n  const columns1 = [\r\n    { field: \"machine_id\", header: \"Machine Id\" },\r\n    { field: \"installation_id\", header: \"Installation Id\" },\r\n    { field: \"installation_date\", header: \"Uninstallation Date\" },\r\n    { field: \"location\", header: \"Location\" },\r\n    { field: \"uninstallation_date\", header: \"Uninstallation Date\" },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div id=\"scroll-cards\">\r\n        <div className=\"mt-3 ml-4 mr-4\">\r\n          <DataCard name=\"device\" id=\"company\" />\r\n        </div>\r\n      </div>\r\n      <div id=\"table\">\r\n        <div className=\" mt-3 ml-4 mr-4\">\r\n          <Band name=\"Company Name\" location=\"location\" status=\"status\" />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/device/:BaconBit\"\r\n              render={(props) => <Table {...props} columns={columns} />}\r\n            />\r\n            <Route\r\n              path=\"/:device/:innertable\"\r\n              render={(props) => <Table {...props} columns={columns1} />}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\Nav.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\components\\band.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\components\\table.js",["92","93"],"import React, { useEffect, useState } from \"react\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchTable } from \"../redux/action\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Table(props) {\r\n  console.log(props);\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const data = useSelector((state) => state.table.data);\r\n  //  const columns = useSelector((state) =>state.table.device)\r\n\r\n  // const data = [\r\n  //   {\r\n  //     machine_id: \"F4:5A:5C:F8:59:BC\",\r\n  //     installation_id: \"AU-T0001\",\r\n  //     installation_date: \"18-09-2020\",\r\n  //     location: \"Auburn\",\r\n  //     uninstallation_date: \"18-09-2020\",\r\n  // name: \"company1\",\r\n  // location: \"Beavercreek\",\r\n  // status: \"installed\",\r\n  // count: 20,\r\n  //     history: [\r\n  //       {\r\n  //         installation_id: 1,\r\n  //         installation_date: \"20/10/2020\",\r\n  //         location: \"Rio De Janeiro\",\r\n  //         status: \"Installed\",\r\n  //         uninstallation_date: \"30/10/2020\",\r\n  //         company: \"Nulla Tempor Odio\",\r\n  //       },\r\n  //       {\r\n  //         installation_id: 2,\r\n  //         installation_date: \"20/10/2020\",\r\n  //         location: \"Tokiyo\",\r\n  //         status: \"Installed\",\r\n  //         uninstallation_date: \"30/10/2020\",\r\n  //         company: \"Nulla Tempor Odio\",\r\n  //       },\r\n  //       {\r\n  //         installation_id: 3,\r\n  //         installation_date: \"20/10/2020\",\r\n  //         location: \"Manila\",\r\n  //         status: \"Installed\",\r\n  //         uninstallation_date: \"30/10/2020\",\r\n  //         company: \"Nulla Tempor Odio\",\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  //   {\r\n  //     machine_id: \"B4:5A:5C:F8:59:BC\",\r\n  //     installation_id: \"AU-T0002\",\r\n  //     installation_date: \"13-09-2020\",\r\n  //     location: \"Auburn\",\r\n  //     uninstallation_date: \"19-09-2020\",\r\n  //     // name: \"company1\",\r\n  //     // location: \"Beavercreek\",\r\n  //     // status: \"installed\",\r\n  //     // count: 20,\r\n  //     history: [\r\n  //       {\r\n  //         installation_id: 4,\r\n  //         installation_date: \"20/10/2020\",\r\n  //         location: \"Rio De Janeiro\",\r\n  //         status: \"Installed\",\r\n  //         uninstallation_date: \"30/10/2020\",\r\n  //         company: \"Nulla Tempor Odio\",\r\n  //       },\r\n  //       {\r\n  //         installation_id: 5,\r\n  //         installation_date: \"20/10/2020\",\r\n  //         location: \"Tokiyo\",\r\n  //         status: \"Installed\",\r\n  //         uninstallation_date: \"30/10/2020\",\r\n  //         company: \"Nulla Tempor Odio\",\r\n  //       },\r\n  //       {\r\n  //         installation_id: 6,\r\n  //         installation_date: \"20/10/2020\",\r\n  //         location: \"Manila\",\r\n  //         status: \"Installed\",\r\n  //         uninstallation_date: \"30/10/2020\",\r\n  //         company: \"Nulla Tempor Odio\",\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  //   {\r\n  //     machine_id: \"P4:5A:5C:F8:59:BC\",\r\n  //     installation_id: \"AU-T0003\",\r\n  //     installation_date: \"18-09-2020\",\r\n  //     location: \"Auburn\",\r\n  //     uninstallation_date: \"18-09-2020\",\r\n  //     // name: \"company1\",\r\n  //     // location: \"Beavercreek\",\r\n  //     // status: \"installed\",\r\n  //     // count: 20,\r\n  //     history: [\r\n  //       {\r\n  //         installation_id: 7,\r\n  //         installation_date: \"20/10/2020\",\r\n  //         location: \"Rio De Janeiro\",\r\n  //         status: \"Installed\",\r\n  //         uninstallation_date: \"30/10/2020\",\r\n  //         company: \"Nulla Tempor Odio\",\r\n  //       },\r\n  //       {\r\n  //         installation_id: 8,\r\n  //         installation_date: \"20/10/2020\",\r\n  //         location: \"Tokiyo\",\r\n  //         status: \"Installed\",\r\n  //         uninstallation_date: \"30/10/2020\",\r\n  //         company: \"Nulla Tempor Odio\",\r\n  //       },\r\n  //       {\r\n  //         installation_id: 9,\r\n  //         installation_date: \"20/10/2020\",\r\n  //         location: \"Manila\",\r\n  //         status: \"Installed\",\r\n  //         uninstallation_date: \"30/10/2020\",\r\n  //         company: \"Nulla Tempor Odio\",\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  //   {\r\n  //     machine_id: \"A4:5A:5C:F8:59:BC\",\r\n  //     installation_id: \"AU-T0001\",\r\n  //     installation_date: \"18-09-2020\",\r\n  //     location: \"Auburn\",\r\n  //     uninstallation_date: \"18-09-2020\",\r\n  //     // name: \"company1\",\r\n  //     // location: \"Beavercreek\",\r\n  //     // status: \"installed\",\r\n  //     // count: 20,\r\n  //     history: [\r\n  //       {\r\n  //         installation_id: 10,\r\n  //         installation_date: \"20/10/2020\",\r\n  //         location: \"Rio De Janeiro\",\r\n  //         status: \"Installed\",\r\n  //         uninstallation_date: \"30/10/2020\",\r\n  //         company: \"Nulla Tempor Odio\",\r\n  //       },\r\n  //       {\r\n  //         installation_id: 11,\r\n  //         installation_date: \"20/10/2020\",\r\n  //         location: \"Tokiyo\",\r\n  //         status: \"Installed\",\r\n  //         uninstallation_date: \"30/10/2020\",\r\n  //         company: \"Nulla Tempor Odio\",\r\n  //       },\r\n  //       {\r\n  //         installation_id: 12,\r\n  //         installation_date: \"20/10/2020\",\r\n  //         location: \"Manila\",\r\n  //         status: \"Installed\",\r\n  //         uninstallation_date: \"30/10/2020\",\r\n  //         company: \"Nulla Tempor Odio\",\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  //   {\r\n  //     machine_id: \"Q4:5A:5C:F8:59:BC\",\r\n  //     installation_id: \"AU-T0001\",\r\n  //     installation_date: \"18-09-2020\",\r\n  //     location: \"Auburn\",\r\n  //     uninstallation_date: \"18-09-2020\",\r\n  //     // name: \"company1\",\r\n  //     // location: \"Beavercreek\",\r\n  //     // status: \"installed\",\r\n  //     // count: 20,\r\n  //     history: [\r\n  //       {\r\n  //         installation_id: 13,\r\n  //         installation_date: \"20/10/2020\",\r\n  //         location: \"Rio De Janeiro\",\r\n  //         status: \"Installed\",\r\n  //         uninstallation_date: \"30/10/2020\",\r\n  //         company: \"Nulla Tempor Odio\",\r\n  //       },\r\n  //       {\r\n  //         installation_id: 14,\r\n  //         installation_date: \"20/10/2020\",\r\n  //         location: \"Tokiyo\",\r\n  //         status: \"Installed\",\r\n  //         uninstallation_date: \"30/10/2020\",\r\n  //         company: \"Nulla Tempor Odio\",\r\n  //       },\r\n  //       {\r\n  //         installation_id: 15,\r\n  //         installation_date: \"20/10/2020\",\r\n  //         location: \"Manila\",\r\n  //         status: \"Installed\",\r\n  //         uninstallation_date: \"30/10/2020\",\r\n  //         company: \"Nulla Tempor Odio\",\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  // ];\r\n\r\n  // const information = [\r\n  //   {\r\n  //     model: \"Model No.\",\r\n  //     manufacturer: \"manufacturer\",\r\n  //     hardware_version: \"Hardware Version\",\r\n  //     commission_date: \"Commission Date\",\r\n  //     decommission_date: \"Decommission Date\",\r\n  //     cost: \"$900\",\r\n  //   },\r\n  // ];\r\n\r\n  // const [rows, setRows] = useState(null);\r\n\r\n  const dynamicColumns = props.columns.map((col, i) => {\r\n    return <Column key={col.field} field={col.field} header={col.header} />;\r\n  });\r\n\r\n  // const columns1 = [\r\n  //   { field: \"installation_id\", header: \"Installation ID\" },\r\n  //   { field: \"installation_date\", header: \"Installation Date\" },\r\n  //   { field: \"location\", header: \"Location\" },\r\n  //   { field: \"status\", header: \"Status\"},\r\n  //   { field: \"uninstallation_date\", header: \"Uninstallation date\" },\r\n  //   { field: \"company\", header: \"Company\" },\r\n  // ];\r\n\r\n  // const dynamicColumns1 = columns1.map((col, i) => {\r\n  //   return (\r\n  //     <Column\r\n  //       className=\"data-column\"\r\n  //       key={col.field}\r\n  //       field={col.field}\r\n  //       header={col.header}\r\n  //     />\r\n  //   );\r\n  // });\r\n\r\n  // const columns2 = [\r\n  //   { field: \"model\", header: \"Model\" },\r\n  //   { field: \"manufacturer\", header: \"Manufacturer\" },\r\n  //   { field: \"hardware_version\", header: \"Hardware Version\" },\r\n  //   { field: \"commission_date\", header: \"Commission Date\" },\r\n  //   { field: \"decommission_date\", header: \"Decommission Date\" },\r\n  //   { field: \"cost\", header: \"Cost\" },\r\n  // ];\r\n\r\n  // const dynamicColumns2 = columns2.map((col, i) => {\r\n  //   return <Column key={col.field} field={col.field} header={col.header} />;\r\n  // });\r\n\r\n  // const rowExpansionTemplate = (data) => {\r\n  //   return (\r\n  //     <div>\r\n  //       <DataTable className=\"information\" value={information}>\r\n  //         {dynamicColumns2}\r\n  //       </DataTable>\r\n  //       <DataTable className=\"data-table\" value={data.history}>\r\n  //         {dynamicColumns1}\r\n  //       </DataTable>\r\n  //     </div>\r\n  //   );\r\n  // };\r\n  console.log(props);\r\n  const onRowSelect = (e) => {\r\n    console.log(e);\r\n    history.push(`${props.match.url}/${e.data.name}`);\r\n    dispatch(\r\n      fetchTable(\"dashboard/device/location\", {\r\n        company: e.data.name,\r\n        device: \"BaconBit\",\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DataTable\r\n        value={data}\r\n        header=\"INVENTORY LIST\"\r\n        paginator\r\n        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink\"\r\n        currentPageReportTemplate=\"{first} to {last} \"\r\n        rows={5}\r\n        // expandedRows={rows}\r\n        // onRowToggle={(e) => setRows(e.data)}\r\n        // rowExpansionTemplate={rowExpansionTemplate}\r\n        selectionMode=\"single\"\r\n        onRowSelect={(e) => onRowSelect(e)}\r\n      >\r\n        {dynamicColumns}\r\n        {/* <Column expander style={{ width: \"3em\" }} /> */}\r\n      </DataTable>\r\n    </>\r\n  );\r\n}\r\n","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\SideNav.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\type.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\action.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\components\\DataCard.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\type.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\action.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\action.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\config\\apconfig.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":7,"column":1,"nodeType":"100","endLine":35,"endColumn":3},{"ruleId":"98","severity":1,"message":"99","line":7,"column":3,"nodeType":"100","endLine":35,"endColumn":5},{"ruleId":"101","severity":1,"message":"102","line":18,"column":9,"nodeType":"103","messageId":"104","endLine":18,"endColumn":13},{"ruleId":"101","severity":1,"message":"105","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"106","line":1,"column":28,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]