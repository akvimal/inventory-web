[{"E:\\Project\\InventoryApp\\inventory-web\\src\\index.js":"1","E:\\Project\\InventoryApp\\inventory-web\\src\\App.js":"2","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\reducer.js":"3","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\HomePage.js":"4","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\company.js":"5","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\device.js":"6","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\search.js":"7","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\reducer.js":"8","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\reducer.js":"9","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\action.js":"10","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\action.js":"11","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\type.js":"12","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\Nav.js":"13","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\SideNav.js":"14","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\type.js":"15","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\DataCard.js":"16","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\band.js":"17","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\table.js":"18","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\utils\\removeDuplicates.js":"19","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\action.js":"20","E:\\Project\\InventoryApp\\inventory-web\\src\\config\\apconfig.js":"21"},{"size":519,"mtime":1608120828589,"results":"22","hashOfConfig":"23"},{"size":768,"mtime":1608719889810,"results":"24","hashOfConfig":"23"},{"size":479,"mtime":1608719889820,"results":"25","hashOfConfig":"23"},{"size":324,"mtime":1608120828621,"results":"26","hashOfConfig":"23"},{"size":6559,"mtime":1611291367046,"results":"27","hashOfConfig":"23"},{"size":6862,"mtime":1611303681568,"results":"28","hashOfConfig":"23"},{"size":5248,"mtime":1611204908818,"results":"29","hashOfConfig":"23"},{"size":988,"mtime":1609935150753,"results":"30","hashOfConfig":"23"},{"size":941,"mtime":1609935150755,"results":"31","hashOfConfig":"23"},{"size":68,"mtime":1608719889817,"results":"32","hashOfConfig":"23"},{"size":1064,"mtime":1611306651387,"results":"33","hashOfConfig":"23"},{"size":286,"mtime":1609935150753,"results":"34","hashOfConfig":"23"},{"size":795,"mtime":1608187360396,"results":"35","hashOfConfig":"23"},{"size":1292,"mtime":1611204908818,"results":"36","hashOfConfig":"23"},{"size":246,"mtime":1609935150756,"results":"37","hashOfConfig":"23"},{"size":2582,"mtime":1611311806635,"results":"38","hashOfConfig":"23"},{"size":578,"mtime":1611291367045,"results":"39","hashOfConfig":"23"},{"size":3410,"mtime":1611303717860,"results":"40","hashOfConfig":"23"},{"size":288,"mtime":1611206001665,"results":"41","hashOfConfig":"23"},{"size":1095,"mtime":1609935150752,"results":"42","hashOfConfig":"23"},{"size":187,"mtime":1608120828589,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"yu3cy0",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"E:\\Project\\InventoryApp\\inventory-web\\src\\index.js",[],["91","92"],"E:\\Project\\InventoryApp\\inventory-web\\src\\App.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\reducer.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\HomePage.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\company.js",["93"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport DataCard from \"../components/DataCard\";\r\nimport Table from \"../components/table\";\r\nimport Band from \"../components/band\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchDataCard } from \"../redux/action\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { fetchTable } from \"../redux/table/action\";\r\nimport _ from \"lodash\";\r\nimport { Column } from \"primereact/column\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport getUnique from \"../pages/utils/removeDuplicates\";\r\n\r\nexport default function Company() {\r\n  const data = useSelector((state) => state.table.data);\r\n  const innerData = useSelector((state) => state.table.data2);\r\n  const company = useSelector((state) => state.dataCard.company);\r\n  let dt = useRef(null);\r\n\r\n  const [cname, setCname] = useState(\"ALL\");\r\n  const [clocation, setClocation] = useState(\"ALL\");\r\n  const [cstatus, setCstatus] = useState(\"ALL\");\r\n  const [item, setItem] = useState(null);\r\n  const deviceClick = (e) => {\r\n    return (\r\n      setCname(e.data.name),\r\n      setClocation(e.data.location),\r\n      setCstatus(e.data.status)\r\n    );\r\n  };\r\n   const click = () => {\r\n     return setCname(\"ALL\"), setClocation(\"ALL\"), setCstatus(\"ALL\");\r\n   };\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchDataCard(\"dashboard/company/devices\", \"company\"));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (_.isEmpty(company)) {\r\n    } else {\r\n      dispatch(\r\n        fetchTable(\"dashboard/device/status\", { company: company[0].name })\r\n      );\r\n      localStorage.setItem(\"device name\", company[0].name);\r\n      history.push(`/company/${company[0].name}`);\r\n    }\r\n  }, [company, history, dispatch]);\r\n\r\n  const uniqueName = getUnique(data, \"name\");\r\n  const uniqueLoc = getUnique(data, \"location\");\r\n  const uniqueStatus = getUnique(data, \"status\");\r\n\r\n  const location = uniqueName.map((a) => {\r\n    return a.location;\r\n  });\r\n\r\n  const deviceName = uniqueLoc.map((d) => {\r\n    return d.name;\r\n  });\r\n\r\n  const status = uniqueStatus.map((status) => {\r\n    return status.status;\r\n  });\r\n\r\n  const onFilterLocationChange = (event) => {\r\n    dt.current.filter(event.value, \"location\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const onFilterDeviceNameChange = (event) => {\r\n    dt.current.filter(event.value, \"name\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const onFilterStatusChange = (event) => {\r\n    dt.current.filter(event.value, \"status\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const dropDownFilter = (options, onChange) => {\r\n    return (\r\n      <Dropdown\r\n        value={item}\r\n        options={options}\r\n        onChange={onChange}\r\n        placeholder=\"search\"\r\n        className=\"p-column-filter\"\r\n        showClear\r\n      />\r\n    );\r\n  };\r\n  const expander = <Column expander style={{ width: \"3em\" }} />;\r\n  const [filter, setFilter] = useState(false);\r\n  const icon = (\r\n    <i\r\n      className=\"pi pi-filter\"\r\n      style={{\r\n        fontSize: \"10px\",\r\n        cursor: \"pointer\",\r\n        paddingLeft: \"50px\",\r\n      }}\r\n      onClick={() => setFilter(!filter)}\r\n    ></i>\r\n  );\r\n  const columns = [\r\n    {\r\n      field: \"location\",\r\n      header: \"LOCATION\",\r\n      filter: filter,\r\n      filterElement: dropDownFilter(location, onFilterLocationChange),\r\n    },\r\n    {\r\n      field: \"name\",\r\n      header: \"DEVICE NAME\",\r\n      filter: filter,\r\n      filterElement: dropDownFilter(deviceName, onFilterDeviceNameChange),\r\n    },\r\n    {\r\n      field: \"status\",\r\n      header: \"STATUS\",\r\n      filter: filter,\r\n      filterElement: dropDownFilter(status, onFilterStatusChange),\r\n    },\r\n    { field: \"count\", header: \"COUNT\" },\r\n  ];\r\n\r\n  const columns1 = [\r\n    { field: \"machine_id\", header: \"MACHINE ID\" },\r\n    { field: \"installation_id\", header: \"INSTALLATION ID\" },\r\n    { field: \"installation_date\", header: \"INSTALLATION DATE\" },\r\n    { field: \"location\", header: \"LOCATION\" },\r\n    { field: \"uninstallation_date\", header: \"AVAILABILITY DATE\" },\r\n  ];\r\n\r\n  const columns2 = [\r\n    { field: \"installed_id\", header: \"INSTALLATION ID\" },\r\n    { field: \"installed_date\", header: \"INSTALLATION DATE\" },\r\n    { field: \"location\", header: \"LOCATION\" },\r\n    { field: \"status\", header: \"STATUS\" },\r\n    { field: \"uninstallation_date\", header: \"UNINSTALLATION DATE\" },\r\n    { field: \"name\", header: \"COMPANY\" },\r\n  ];\r\n  const columns3 = [\r\n    { field: \"model\", header: \"MODEL\" },\r\n    { field: \"manufacturer\", header: \"MANUFACTURER\" },\r\n    { field: \"hardware_version\", header: \"HARDWARE VERSION\" },\r\n    { field: \"commision_date\", header: \"COMMISSION DATE\" },\r\n    { field: \"decommision_date\", header: \"DECOMMISSION DATE\" },\r\n    { field: \"cycle\", header: \"Cycle\" },\r\n  ];\r\nconst pages = true;\r\n  return (\r\n    <>\r\n      <div id=\"scroll-cards\">\r\n        <div className=\"mt-3 ml-4 mr-4\">\r\n          <DataCard\r\n            name=\"company\"\r\n            id=\"device\"\r\n            url=\"dashboard/device/status\"\r\n            data={company}\r\n            click={click}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div id=\"table\">\r\n        <div className=\"mt-3 ml-4 mr-4\">\r\n          <Band\r\n            name=\"Device Name\"\r\n            location=\"location\"\r\n            status=\"status\"\r\n            selectedName={cname}\r\n            selectedLocation={clocation}\r\n            selectedStatus={cstatus}\r\n          />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/company/:companyname\"\r\n              render={(props) => (\r\n                <Table\r\n                  tableData={data}\r\n                  filtericon={icon}\r\n                  {...props}\r\n                  refs={dt}\r\n                  columns={columns}\r\n                  columns2={columns2}\r\n                  columns3={columns3}\r\n                  type=\"single\"\r\n                  select={deviceClick}\r\n                  page={pages}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/:device/:innertable\"\r\n              render={(props) => (\r\n                <Table\r\n                  tableData={data}\r\n                  {...props}\r\n                  columns={columns1}\r\n                  columns2={columns2}\r\n                  columns3={columns3}\r\n                  rowExpander={expander}\r\n                  row={innerData}\r\n                  page={pages}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\device.js",["94"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport DataCard from \"../components/DataCard\";\r\nimport Table from \"../components/table\";\r\nimport Band from \"../components/band\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchDataCard } from \"../redux/action\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { fetchTable } from \"../redux/action\";\r\nimport _ from \"lodash\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { Column } from \"primereact/column\";\r\nimport getUnique from \"../pages/utils/removeDuplicates\";\r\n\r\nexport default function Device() {\r\n  const device = useSelector((state) => state.dataCard.device);\r\n  const tableData = useSelector((state) => state.table.data);\r\n  const innerTableData = useSelector((state) => state.table.data2);\r\n  const [dname, setDname] = useState(\"ALL\");\r\n  const [dlocation, setDlocation] = useState(\"ALL\");\r\n  const [dstatus, setDstatus] = useState(\"ALL\");\r\n  const [item, setItem] = useState(null);\r\n\r\n  let dt = useRef(null);\r\n\r\n  const rowClick = (e) => {\r\n    return (\r\n      setDname(e.data.name),\r\n      setDlocation(e.data.location),\r\n      setDstatus(e.data.status)\r\n    );\r\n  };\r\n\r\n  const click = () => {\r\n    return setDname(\"ALL\"), setDlocation(\"ALL\"), setDstatus(\"ALL\");\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchDataCard(\"dashboard/device/inventory\", \"device\"));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (_.isEmpty(device)) {\r\n    } else {\r\n      dispatch(\r\n        fetchTable(\"dashboard/company/status\", { device: device[0].name })\r\n      );\r\n      localStorage.setItem(\"device name\", device[0].name);\r\n      history.push(`/device/${device[0].name}`);\r\n    }\r\n  }, [device, dispatch, history]);\r\n\r\n  const uniqueName = getUnique(tableData, \"name\");\r\n  const uniqueLoc = getUnique(tableData, \"location\");\r\n  const uniqueStatus = getUnique(tableData, \"status\");\r\n\r\n  const name = uniqueName.map((a) => {\r\n    return a.name;\r\n  });\r\n\r\n  const location = uniqueLoc.map((loc) => {\r\n    return loc.location;\r\n  });\r\n\r\n  const status = uniqueStatus.map((status) => {\r\n    return status.status;\r\n  });\r\n\r\n  const onFilterNameChange = (event) => {\r\n    dt.current.filter(event.value, \"name\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const onFilterLocationChange = (event) => {\r\n    dt.current.filter(event.value, \"location\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const onFilterStatusChange = (event) => {\r\n    dt.current.filter(event.value, \"status\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const expander = (\r\n    <Column expander className=\"expander\" style={{ width: \"3em\" }} />\r\n  );\r\n  const dropDownFilter = (options, onChange) => {\r\n    return (\r\n      <Dropdown\r\n        value={item}\r\n        options={options}\r\n        onChange={onChange}\r\n        placeholder=\"search\"\r\n        className=\"p-column-filter\"\r\n        showClear\r\n      />\r\n    );\r\n  };\r\n  const [filter, setFilter] = useState(false);\r\n  const icon = (\r\n    <i\r\n      className=\"pi pi-filter\"\r\n      style={{\r\n        fontSize: \"10px\",\r\n        cursor: \"pointer\",\r\n        paddingLeft: \"50px\",\r\n      }}\r\n      onClick={() => setFilter(!filter)}\r\n    ></i>\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      field: \"name\",\r\n      header: \"NAME\",\r\n      filterElement: dropDownFilter(name, onFilterNameChange),\r\n      filter: filter,\r\n    },\r\n    {\r\n      field: \"location\",\r\n      header: \"LOCATION\",\r\n      filterElement: dropDownFilter(location, onFilterLocationChange),\r\n      filter: filter,\r\n    },\r\n    {\r\n      field: \"status\",\r\n      header: \"STATUS\",\r\n      filterElement: dropDownFilter(status, onFilterStatusChange),\r\n      filter: filter,\r\n    },\r\n    { field: \"count\", header: \"COUNT\" },\r\n  ];\r\n\r\n  const columns1 = [\r\n    { field: \"machine_id\", header: \"MACHINE ID\", filter: false },\r\n    { field: \"installation_id\", header: \"ID\", filter: false },\r\n    {\r\n      field: \"installation_date\",\r\n      header: \"DATE\",\r\n      filter: false,\r\n    },\r\n    { field: \"location\", header: \"LOCATION\", filter: false },\r\n    { field: \"device_name\", header: \"MODEL\" },\r\n    { field: \"version\", header: \"VERSION\" },\r\n    { field: \"cycle\", header: \"CYCLE\" },\r\n    // {\r\n    //   field: \"uninstallation_date\",\r\n    //   header: \"AVAILABILITY DATE\",\r\n    //   filter: false,\r\n    // },\r\n  ];\r\n\r\n  const columns2 = [\r\n    { field: \"installed_id\", header: \"ID\" },\r\n    { field: \"installed_date\", header: \"DATE\" },\r\n    { field: \"name\", header: \"COMPANY\" },\r\n    { field: \"location\", header: \"LOCATION\" },\r\n    { field: \"status\", header: \"STATUS\" },\r\n    // { field: \"uninstallation_date\", header: \"UNINSTALLATION DATE\" },\r\n  ];\r\n\r\n  // const columns3 = [\r\n  //   // { field: \"model\", header: \"MODEL\" },\r\n  //   { field: \"manufacturer\", header: \"MANUFACTURER\" },\r\n  //   // { field: \"version\", header: \"HARDWARE VERSION\" },\r\n  //   { field: \"commission_date\", header: \"COMMISSION DATE\" },\r\n  //   { field: \"decommission_date\", header: \"DECOMMISSION DATE\" },\r\n  //   // { field: \"cycle\", header: \"CYCLE\" },\r\n  // ];\r\n\r\n  const pages = true;\r\n\r\n  return (\r\n    <>\r\n      <div id=\"scroll-cards\">\r\n        <div className=\"mt-3 ml-4 mr-4\">\r\n          <DataCard\r\n            name=\"device\"\r\n            id=\"company\"\r\n            url=\"dashboard/company/status\"\r\n            data={device}\r\n            click={click}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div id=\"table\">\r\n        <div className=\" mt-3 ml-4 mr-4\">\r\n          <Band\r\n            name=\"Company Name\"\r\n            location=\"location\"\r\n            status=\"status\"\r\n            selectedName={dname}\r\n            selectedLocation={dlocation}\r\n            selectedStatus={dstatus}\r\n          />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/device/:deviceName\"\r\n              render={(props) => (\r\n                <Table\r\n                  tableData={tableData}\r\n                  filtericon={icon}\r\n                  {...props}\r\n                  refs={dt}\r\n                  columns={columns}\r\n                  columns2={columns2}\r\n                  // columns3={columns3}\r\n                  type=\"single\"\r\n                  select={rowClick}\r\n                  page={pages}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/:device/:innertable\"\r\n              render={(props) => (\r\n                <Table\r\n                  tableData={tableData}\r\n                  {...props}\r\n                  columns={columns1}\r\n                  columns2={columns2}\r\n                  // columns3={columns3}\r\n                  rowExpander={expander}\r\n                  row={innerTableData}\r\n                  page={pages}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\search.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\reducer.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\reducer.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\action.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\action.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\type.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\components\\Nav.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\components\\SideNav.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\type.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\components\\DataCard.js",["95"],"import React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"primereact/card\";\r\nimport { ScrollPanel } from \"primereact/scrollpanel\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport { fetchTable } from \"../redux/action\";\r\n\r\nexport default function DataCard(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  let match = useRouteMatch();\r\n  const location = useLocation();\r\n  const pathItems = location.pathname.split(\"/\");\r\n  const currentCard = pathItems.length ? pathItems[2] : \"\";\r\n  const [statuses, setStatuses] = useState();\r\n\r\n  return (\r\n    <>\r\n      <p className=\"title\">{props.name}</p>\r\n      <hr className=\"divider-line\" />\r\n      <ScrollPanel>\r\n        <div className=\"p-d-flex mt-3\">\r\n          {props.data.map(({ name, status }) => {\r\n            const check =\r\n              props.name === \"device\"\r\n                ? {\r\n                    device: name,\r\n                    status: statuses,\r\n                  }\r\n                : {\r\n                    company: name,\r\n                  };\r\n            return (\r\n              <Link\r\n                to={{ pathname: `${match.url}/${name}` }}\r\n                className=\"link\"\r\n                key={name}\r\n                onClick={() => {\r\n                  dispatch(fetchTable(props.url, check));\r\n                  localStorage.setItem(\"device name\", name);\r\n                  props.click();\r\n                }}\r\n              >\r\n                <div className=\"p-mr-4\" key={name}>\r\n                  <Card\r\n                    title={name}\r\n                    className={currentCard === name ? \"card-active\" : \"p-card\"}\r\n                  >\r\n                    <div className=\"p-d-flex\" key={name}>\r\n                      {status.map((e) => {\r\n                        return (\r\n                          <div\r\n                            className=\"inner-content mr-2 mt-3\"\r\n                            onClick={() => setStatuses(e.name)}\r\n                            key={e.name}\r\n                          >\r\n                            <p className=\"inner-content-title m-0\">{e.name}</p>\r\n                            <p className=\"inner-content-title-1 m-1 ml-0\">\r\n                              {e.count}\r\n                            </p>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </Card>\r\n                </div>\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      </ScrollPanel>\r\n    </>\r\n  );\r\n}\r\n","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\band.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\components\\table.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\utils\\removeDuplicates.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\action.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\config\\apconfig.js",[],["96","97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":32,"column":28,"nodeType":"104","messageId":"105","endLine":32,"endColumn":29},{"ruleId":"102","severity":1,"message":"103","line":34,"column":27,"nodeType":"104","messageId":"105","endLine":34,"endColumn":28},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"98","replacedBy":"110"},{"ruleId":"100","replacedBy":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["112"],["113"],"no-global-assign","no-unsafe-negation"]