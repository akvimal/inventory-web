
[{"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/index.js":"1","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/App.js":"2","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/redux/reducer.js":"3","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/pages/HomePage.js":"4","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/pages/device.js":"5","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/pages/company.js":"6","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/pages/search.js":"7","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/redux/dataCard/reducer.js":"8","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/redux/table/reducer.js":"9","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/redux/action.js":"10","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/redux/table/action.js":"11","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/components/SideNav.js":"12","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/components/Nav.js":"13","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/components/DataCard.js":"14","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/components/table.js":"15","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/components/band.js":"16","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/pages/utils/removeDuplicates.js":"17","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/redux/dataCard/type.js":"18","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/redux/table/type.js":"19","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/redux/dataCard/action.js":"20","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/config/apconfig.js":"21"},{"size":502,"mtime":1611223127000,"results":"22","hashOfConfig":"23"},{"size":736,"mtime":1611223127000,"results":"24","hashOfConfig":"23"},{"size":464,"mtime":1611223127000,"results":"25","hashOfConfig":"23"},{"size":307,"mtime":1611223127000,"results":"26","hashOfConfig":"23"},{"size":6467,"mtime":1612232525000,"results":"27","hashOfConfig":"23"},{"size":6346,"mtime":1612232525000,"results":"28","hashOfConfig":"23"},{"size":5073,"mtime":1612232525000,"results":"29","hashOfConfig":"23"},{"size":943,"mtime":1611223127000,"results":"30","hashOfConfig":"23"},{"size":896,"mtime":1611223127000,"results":"31","hashOfConfig":"23"},{"size":66,"mtime":1611223127000,"results":"32","hashOfConfig":"23"},{"size":986,"mtime":1611223127000,"results":"33","hashOfConfig":"23"},{"size":1249,"mtime":1612232525000,"results":"34","hashOfConfig":"23"},{"size":762,"mtime":1611223127000,"results":"35","hashOfConfig":"23"},{"size":2251,"mtime":1612232525000,"results":"36","hashOfConfig":"23"},{"size":3252,"mtime":1612232525000,"results":"37","hashOfConfig":"23"},{"size":560,"mtime":1612232525000,"results":"38","hashOfConfig":"23"},{"size":278,"mtime":1612232525000,"results":"39","hashOfConfig":"23"},{"size":282,"mtime":1611223127000,"results":"40","hashOfConfig":"23"},{"size":242,"mtime":1611223127000,"results":"41","hashOfConfig":"23"},{"size":1046,"mtime":1611223127000,"results":"42","hashOfConfig":"23"},{"size":153,"mtime":1612233034000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1fzxw5h",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/index.js",[],["89","90"],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/App.js",[],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/redux/reducer.js",[],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/pages/HomePage.js",[],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/pages/device.js",["91"],"import React, { useEffect, useRef, useState } from \"react\";\nimport DataCard from \"../components/DataCard\";\nimport Table from \"../components/table\";\nimport Band from \"../components/band\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchDataCard } from \"../redux/action\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { fetchTable } from \"../redux/action\";\nimport _ from \"lodash\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Column } from \"primereact/column\";\nimport getUnique from \"../pages/utils/removeDuplicates\";\n\nexport default function Device() {\n  const device = useSelector((state) => state.dataCard.device);\n  const tableData = useSelector((state) => state.table.data);\n  const innerTableData = useSelector((state) => state.table.data2);\n  const [dname, setDname] = useState(\"ALL\");\n  const [dlocation, setDlocation] = useState(\"ALL\");\n  const [dstatus, setDstatus] = useState(\"ALL\");\n  const [item, setItem] = useState(null);\n\n  let dt = useRef(null);\n\n  const rowClick = (e) => {\n    return (\n      setDname(e.data.name),\n      setDlocation(e.data.location),\n      setDstatus(e.data.status)\n    );\n  };\n\n  const click = () => {\n    return setDname(\"ALL\"), setDlocation(\"ALL\"), setDstatus(\"ALL\");\n  };\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(fetchDataCard(\"dashboard/device/inventory\", \"device\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (_.isEmpty(device)) {\n    } else {\n      dispatch(\n        fetchTable(\"dashboard/company/status\", { device: device[0].name })\n      );\n      localStorage.setItem(\"device name\", device[0].name);\n      history.push(`/device/${device[0].name}`);\n    }\n  }, [device, dispatch, history]);\n\n  const uniqueName = getUnique(tableData, \"name\");\n  const uniqueLoc = getUnique(tableData, \"location\");\n  const uniqueStatus = getUnique(tableData, \"status\");\n\n  const name = uniqueName.map((a) => {\n    return a.name;\n  });\n\n  const location = uniqueLoc.map((loc) => {\n    return loc.location;\n  });\n\n  const status = uniqueStatus.map((status) => {\n    return status.status;\n  });\n\n  const onFilterNameChange = (event) => {\n    dt.current.filter(event.value, \"name\", \"equals\");\n    setItem(event.value);\n  };\n  const onFilterLocationChange = (event) => {\n    dt.current.filter(event.value, \"location\", \"equals\");\n    setItem(event.value);\n  };\n  const onFilterStatusChange = (event) => {\n    dt.current.filter(event.value, \"status\", \"equals\");\n    setItem(event.value);\n  };\n  const expander = (\n    <Column expander className=\"expander\" style={{ width: \"3em\" }} />\n  );\n  const dropDownFilter = (options, onChange) => {\n    return (\n      <Dropdown\n        value={item}\n        options={options}\n        onChange={onChange}\n        placeholder=\"search\"\n        className=\"p-column-filter\"\n        showClear\n      />\n    );\n  };\n  const [filter, setFilter] = useState(false);\n  const icon = (\n    <i\n      className=\"pi pi-filter\"\n      style={{\n        fontSize: \"10px\",\n        cursor: \"pointer\",\n        paddingLeft: \"50px\",\n      }}\n      onClick={() => setFilter(!filter)}\n    ></i>\n  );\n\n  const columns = [\n    {\n      field: \"name\",\n      header: \"NAME\",\n      filterElement: dropDownFilter(name, onFilterNameChange),\n      filter: filter,\n    },\n    {\n      field: \"location\",\n      header: \"LOCATION\",\n      filterElement: dropDownFilter(location, onFilterLocationChange),\n      filter: filter,\n    },\n    {\n      field: \"status\",\n      header: \"STATUS\",\n      filterElement: dropDownFilter(status, onFilterStatusChange),\n      filter: filter,\n    },\n    { field: \"count\", header: \"COUNT\" },\n  ];\n\n  const columns1 = [\n    { field: \"machine_id\", header: \"MACHINE ID\", filter: false },\n    { field: \"installation_id\", header: \"INSTALLATION ID\", filter: false },\n    {\n      field: \"installation_date\",\n      header: \"INSTALLATION DATE\",\n      filter: false,\n    },\n    { field: \"location\", header: \"LOCATION\", filter: false },\n    {\n      field: \"uninstallation_date\",\n      header: \"AVAILABILITY DATE\",\n      filter: false,\n    },\n  ];\n\n  const columns2 = [\n    { field: \"installed_id\", header: \"ID\" },\n    { field: \"installed_date\", header: \"DATE\" },\n    { field: \"name\", header: \"COMPANY\" },\n    { field: \"location\", header: \"LOCATION\" },\n    { field: \"status\", header: \"STATUS\" },\n    // { field: \"uninstallation_date\", header: \"UNINSTALLATION DATE\" },\n  ];\n\n  const columns3 = [\n    { field: \"model\", header: \"MODEL\" },\n    { field: \"manufacturer\", header: \"MANUFACTURER\" },\n    { field: \"version\", header: \"HARDWARE VERSION\" },\n    { field: \"commission_date\", header: \"COMMISSION DATE\" },\n    { field: \"decommission_date\", header: \"DECOMMISSION DATE\" },\n    { field: \"cycle\", header: \"CYCLE\" },\n  ];\n\n  const pages = true;\n\n  return (\n    <>\n      <div id=\"scroll-cards\">\n        <div className=\"mt-3 ml-4 mr-4\">\n          <DataCard\n            name=\"device\"\n            id=\"company\"\n            url=\"dashboard/company/status\"\n            data={device}\n            click={click}\n          />\n        </div>\n      </div>\n      <div id=\"table\">\n        <div className=\" mt-3 ml-4 mr-4\">\n          <Band\n            name=\"Company Name\"\n            location=\"location\"\n            status=\"status\"\n            selectedName={dname}\n            selectedLocation={dlocation}\n            selectedStatus={dstatus}\n          />\n          <Switch>\n            <Route\n              exact\n              path=\"/device/:deviceName\"\n              render={(props) => (\n                <Table\n                  tableData={tableData}\n                  filtericon={icon}\n                  {...props}\n                  refs={dt}\n                  columns={columns}\n                  columns2={columns2}\n                  columns3={columns3}\n                  type=\"single\"\n                  select={rowClick}\n                  page={pages}\n                />\n              )}\n            />\n            <Route\n              path=\"/:device/:innertable\"\n              render={(props) => (\n                <Table\n                  tableData={tableData}\n                  {...props}\n                  columns={columns1}\n                  columns2={columns2}\n                  columns3={columns3}\n                  rowExpander={expander}\n                  row={innerTableData}\n                  page={pages}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/pages/company.js",["92"],"import React, { useEffect, useRef, useState } from \"react\";\nimport DataCard from \"../components/DataCard\";\nimport Table from \"../components/table\";\nimport Band from \"../components/band\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchDataCard } from \"../redux/action\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { fetchTable } from \"../redux/table/action\";\nimport _ from \"lodash\";\nimport { Column } from \"primereact/column\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport getUnique from \"../pages/utils/removeDuplicates\";\n\nexport default function Company() {\n  const data = useSelector((state) => state.table.data);\n  const innerData = useSelector((state) => state.table.data2);\n  const company = useSelector((state) => state.dataCard.company);\n  let dt = useRef(null);\n\n  const [cname, setCname] = useState(\"ALL\");\n  const [clocation, setClocation] = useState(\"ALL\");\n  const [cstatus, setCstatus] = useState(\"ALL\");\n  const [item, setItem] = useState(null);\n  const deviceClick = (e) => {\n    return (\n      setCname(e.data.name),\n      setClocation(e.data.location),\n      setCstatus(e.data.status)\n    );\n  };\n   const click = () => {\n     return setCname(\"ALL\"), setClocation(\"ALL\"), setCstatus(\"ALL\");\n   };\n  const history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchDataCard(\"dashboard/company/devices\", \"company\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (_.isEmpty(company)) {\n    } else {\n      dispatch(\n        fetchTable(\"dashboard/device/status\", { company: company[0].name })\n      );\n      localStorage.setItem(\"device name\", company[0].name);\n      history.push(`/company/${company[0].name}`);\n    }\n  }, [company, history, dispatch]);\n\n  const uniqueName = getUnique(data, \"name\");\n  const uniqueLoc = getUnique(data, \"location\");\n  const uniqueStatus = getUnique(data, \"status\");\n\n  const location = uniqueName.map((a) => {\n    return a.location;\n  });\n\n  const deviceName = uniqueLoc.map((d) => {\n    return d.name;\n  });\n\n  const status = uniqueStatus.map((status) => {\n    return status.status;\n  });\n\n  const onFilterLocationChange = (event) => {\n    dt.current.filter(event.value, \"location\", \"equals\");\n    setItem(event.value);\n  };\n  const onFilterDeviceNameChange = (event) => {\n    dt.current.filter(event.value, \"name\", \"equals\");\n    setItem(event.value);\n  };\n  const onFilterStatusChange = (event) => {\n    dt.current.filter(event.value, \"status\", \"equals\");\n    setItem(event.value);\n  };\n  const dropDownFilter = (options, onChange) => {\n    return (\n      <Dropdown\n        value={item}\n        options={options}\n        onChange={onChange}\n        placeholder=\"search\"\n        className=\"p-column-filter\"\n        showClear\n      />\n    );\n  };\n  const expander = <Column expander style={{ width: \"3em\" }} />;\n  const [filter, setFilter] = useState(false);\n  const icon = (\n    <i\n      className=\"pi pi-filter\"\n      style={{\n        fontSize: \"10px\",\n        cursor: \"pointer\",\n        paddingLeft: \"50px\",\n      }}\n      onClick={() => setFilter(!filter)}\n    ></i>\n  );\n  const columns = [\n    {\n      field: \"location\",\n      header: \"LOCATION\",\n      filter: filter,\n      filterElement: dropDownFilter(location, onFilterLocationChange),\n    },\n    {\n      field: \"name\",\n      header: \"DEVICE NAME\",\n      filter: filter,\n      filterElement: dropDownFilter(deviceName, onFilterDeviceNameChange),\n    },\n    {\n      field: \"status\",\n      header: \"STATUS\",\n      filter: filter,\n      filterElement: dropDownFilter(status, onFilterStatusChange),\n    },\n    { field: \"count\", header: \"COUNT\" },\n  ];\n\n  const columns1 = [\n    { field: \"machine_id\", header: \"MACHINE ID\" },\n    { field: \"installation_id\", header: \"INSTALLATION ID\" },\n    { field: \"installation_date\", header: \"INSTALLATION DATE\" },\n    { field: \"location\", header: \"LOCATION\" },\n    { field: \"uninstallation_date\", header: \"AVAILABILITY DATE\" },\n  ];\n\n  const columns2 = [\n    { field: \"installed_id\", header: \"INSTALLATION ID\" },\n    { field: \"installed_date\", header: \"INSTALLATION DATE\" },\n    { field: \"location\", header: \"LOCATION\" },\n    { field: \"status\", header: \"STATUS\" },\n    { field: \"uninstallation_date\", header: \"UNINSTALLATION DATE\" },\n    { field: \"name\", header: \"COMPANY\" },\n  ];\n  const columns3 = [\n    { field: \"model\", header: \"MODEL\" },\n    { field: \"manufacturer\", header: \"MANUFACTURER\" },\n    { field: \"hardware_version\", header: \"HARDWARE VERSION\" },\n    { field: \"commision_date\", header: \"COMMISSION DATE\" },\n    { field: \"decommision_date\", header: \"DECOMMISSION DATE\" },\n    { field: \"cycle\", header: \"Cycle\" },\n  ];\nconst pages = true;\n  return (\n    <>\n      <div id=\"scroll-cards\">\n        <div className=\"mt-3 ml-4 mr-4\">\n          <DataCard\n            name=\"company\"\n            id=\"device\"\n            url=\"dashboard/device/status\"\n            data={company}\n            click={click}\n          />\n        </div>\n      </div>\n      <div id=\"table\">\n        <div className=\"mt-3 ml-4 mr-4\">\n          <Band\n            name=\"Device Name\"\n            location=\"location\"\n            status=\"status\"\n            selectedName={cname}\n            selectedLocation={clocation}\n            selectedStatus={cstatus}\n          />\n          <Switch>\n            <Route\n              exact\n              path=\"/company/:companyname\"\n              render={(props) => (\n                <Table\n                  tableData={data}\n                  filtericon={icon}\n                  {...props}\n                  refs={dt}\n                  columns={columns}\n                  columns2={columns2}\n                  columns3={columns3}\n                  type=\"single\"\n                  select={deviceClick}\n                  page={pages}\n                />\n              )}\n            />\n            <Route\n              path=\"/:device/:innertable\"\n              render={(props) => (\n                <Table\n                  tableData={data}\n                  {...props}\n                  columns={columns1}\n                  columns2={columns2}\n                  columns3={columns3}\n                  rowExpander={expander}\n                  row={innerData}\n                  page={pages}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/pages/search.js",[],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/redux/dataCard/reducer.js",[],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/redux/table/reducer.js",[],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/redux/action.js",[],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/redux/table/action.js",[],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/components/SideNav.js",[],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/components/Nav.js",[],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/components/DataCard.js",[],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/components/table.js",[],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/components/band.js",[],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/pages/utils/removeDuplicates.js",[],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/redux/dataCard/type.js",[],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/redux/table/type.js",[],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/redux/dataCard/action.js",[],"/Volumes/Data HD/Workspace/goldfinch/porklogic/inventory-web/src/config/apconfig.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":34,"column":27,"nodeType":"99","messageId":"100","endLine":34,"endColumn":28},{"ruleId":"97","severity":1,"message":"98","line":32,"column":28,"nodeType":"99","messageId":"100","endLine":32,"endColumn":29},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]