[{"E:\\Project\\InventoryApp\\inventory-web\\src\\index.js":"1","E:\\Project\\InventoryApp\\inventory-web\\src\\App.js":"2","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\reducer.js":"3","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\company.js":"4","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\device.js":"5","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\search.js":"6","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\HomePage.js":"7","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\reducer.js":"8","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\reducer.js":"9","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\action.js":"10","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\action.js":"11","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\DataCard.js":"12","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\Nav.js":"13","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\band.js":"14","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\SideNav.js":"15","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\utils\\removeDuplicates.js":"16","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\table.js":"17","E:\\Project\\InventoryApp\\inventory-web\\src\\config\\apconfig.js":"18","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\type.js":"19","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\type.js":"20","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\action.js":"21","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\innerTable.js":"22"},{"size":519,"mtime":1608120828589,"results":"23","hashOfConfig":"24"},{"size":768,"mtime":1608719889810,"results":"25","hashOfConfig":"24"},{"size":479,"mtime":1608719889820,"results":"26","hashOfConfig":"24"},{"size":7180,"mtime":1614683850981,"results":"27","hashOfConfig":"24"},{"size":6916,"mtime":1614683850992,"results":"28","hashOfConfig":"24"},{"size":5481,"mtime":1612597382568,"results":"29","hashOfConfig":"24"},{"size":324,"mtime":1608120828621,"results":"30","hashOfConfig":"24"},{"size":940,"mtime":1612597382580,"results":"31","hashOfConfig":"24"},{"size":988,"mtime":1609935150753,"results":"32","hashOfConfig":"24"},{"size":68,"mtime":1608719889817,"results":"33","hashOfConfig":"24"},{"size":1064,"mtime":1612529808068,"results":"34","hashOfConfig":"24"},{"size":3142,"mtime":1620288776447,"results":"35","hashOfConfig":"24"},{"size":689,"mtime":1612597382310,"results":"36","hashOfConfig":"24"},{"size":1206,"mtime":1614683850920,"results":"37","hashOfConfig":"24"},{"size":1360,"mtime":1620574985870,"results":"38","hashOfConfig":"24"},{"size":288,"mtime":1612242657991,"results":"39","hashOfConfig":"24"},{"size":2597,"mtime":1612597424496,"results":"40","hashOfConfig":"24"},{"size":160,"mtime":1620288776447,"results":"41","hashOfConfig":"24"},{"size":286,"mtime":1609935150753,"results":"42","hashOfConfig":"24"},{"size":246,"mtime":1612519043368,"results":"43","hashOfConfig":"24"},{"size":1095,"mtime":1609935150752,"results":"44","hashOfConfig":"24"},{"size":1126,"mtime":1612597382549,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"yu3cy0",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"E:\\Project\\InventoryApp\\inventory-web\\src\\index.js",[],["93","94"],"E:\\Project\\InventoryApp\\inventory-web\\src\\App.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\reducer.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\company.js",["95","96"],"/* eslint-disable no-sequences */\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport DataCard from \"../components/DataCard\";\r\nimport Table from \"../components/table\";\r\nimport Band from \"../components/band\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchDataCard } from \"../redux/action\";\r\nimport { Route, Switch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { fetchTable } from \"../redux/table/action\";\r\nimport _ from \"lodash\";\r\nimport { Column } from \"primereact/column\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport getUnique from \"../pages/utils/removeDuplicates\";\r\nimport apconfig from \"../config/apconfig\";\r\n\r\nexport default function Company(props) {\r\n  const data = useSelector((state) => state.table.data);\r\n  const innerData = useSelector((state) => state.table.data2);\r\n  const company = useSelector((state) => state.dataCard.company);\r\n  let dt = useRef(null);\r\n\r\n  const [cname, setCname] = useState(\"ALL\");\r\n  const [clocation, setClocation] = useState(\"ALL\");\r\n  const [cstatus, setCstatus] = useState(\"ALL\");\r\n  const [item, setItem] = useState(null);\r\n  const [filterData, setFilterData] = useState([]);\r\n\r\n  const [TraceBackId, setTraceBackId] = useState(\"\");\r\n  const locate = useLocation();\r\n  const pathItems = locate.pathname.split(\"/\");\r\n  const deviceClick = (e) => {\r\n    return (\r\n      setCname(e.data.name),\r\n      setClocation(e.data.location),\r\n      setCstatus(e.data.status)\r\n    );\r\n  };\r\n  const click = (d) => {\r\n    setTraceBackId(d);\r\n    setCname(\"ALL\");\r\n    setClocation(\"ALL\");\r\n    setCstatus(\"ALL\");\r\n  };\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchDataCard(\"dashboard/company/devices\", \"company\"));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (_.isEmpty(company)) {\r\n    } else {\r\n      dispatch(\r\n        fetchTable(\"dashboard/device/status\", { company: company[0].name })\r\n      );\r\n      setTraceBackId(company[0].name);\r\n      history.push(`/company/${company[0].name}`);\r\n    }\r\n  }, [company, history, dispatch]);\r\n  useEffect(() => {\r\n    apconfig\r\n      .post(\"dashboard/device/status\", { company: pathItems[2] })\r\n      .then((e) => setFilterData(e.data))\r\n      .catch((e) => console.log(e));\r\n  }, [pathItems[2]]);\r\n  const uniqueName = getUnique(filterData, \"name\");\r\n  const uniqueLoc = getUnique(filterData, \"location\");\r\n  const uniqueStatus = getUnique(filterData, \"status\");\r\n\r\n  const deviceName = uniqueName.map((a) => {\r\n    return a.name;\r\n  });\r\n  const location = uniqueLoc.map((d) => {\r\n    return d.location;\r\n  });\r\n\r\n  const status = uniqueStatus.map((status) => {\r\n    return status.status;\r\n  });\r\n\r\n  const onFilterLocationChange = (event) => {\r\n    dt.current.filter(event.value, \"location\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const onFilterDeviceNameChange = (event) => {\r\n    dt.current.filter(event.value, \"name\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const onFilterStatusChange = (event) => {\r\n    dt.current.filter(event.value, \"status\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const dropDownFilter = (options, onChange) => {\r\n    return (\r\n      <Dropdown\r\n        value={item}\r\n        options={options}\r\n        onChange={onChange}\r\n        placeholder=\"search\"\r\n        className=\"p-column-filter\"\r\n        showClear\r\n      />\r\n    );\r\n  };\r\n  const expander = <Column expander style={{ width: \"3em\" }} />;\r\n  const [filter, setFilter] = useState(false);\r\n  const icon = (\r\n    <i\r\n      className=\"pi pi-filter\"\r\n      style={{\r\n        fontSize: \"10px\",\r\n        cursor: \"pointer\",\r\n        paddingLeft: \"50px\",\r\n      }}\r\n      onClick={() => setFilter(!filter)}\r\n    ></i>\r\n  );\r\n  const columns = [\r\n    {\r\n      field: \"location\",\r\n      header: \"LOCATION\",\r\n      filter: filter,\r\n      filterElement: dropDownFilter(location, onFilterLocationChange),\r\n    },\r\n    {\r\n      field: \"name\",\r\n      header: \"DEVICE NAME\",\r\n      filter: filter,\r\n      filterElement: dropDownFilter(deviceName, onFilterDeviceNameChange),\r\n    },\r\n    {\r\n      field: \"status\",\r\n      header: \"STATUS\",\r\n      filter: filter,\r\n      filterElement: dropDownFilter(status, onFilterStatusChange),\r\n    },\r\n    { field: \"count\", header: \"COUNT\" },\r\n  ];\r\n\r\n  const columns1 = [\r\n    { field: \"machine_id\", header: \"MACHINE ID\" },\r\n    { field: \"installation_id\", header: \"CUSTOM ID\" },\r\n    { field: \"installation_date\", header: \"UPDATE DATE\" },\r\n    { field: \"location\", header: \"LOCATION\" },\r\n    { field: \"version\", header: \"VERSION\" },\r\n    { field: \"cycle\", header: \"CYCLE\" },\r\n  ];\r\n\r\n  const columns2 = [\r\n    { field: \"installed_id\", header: \"CUSTOM ID\" },\r\n    { field: \"installed_date\", header: \"UPDATE DATE\" },\r\n    { field: \"name\", header: \"COMPANY\" },\r\n    { field: \"location\", header: \"LOCATION\" },\r\n    { field: \"status\", header: \"STATUS\" },\r\n    { field: \"version\", header: \"VERSION\" },\r\n    { field: \"comments\", header: \"COMMENTS\" },\r\n  ];\r\n  const columns3 = [\r\n    { field: \"model\", header: \"MODEL\" },\r\n    { field: \"manufacturer\", header: \"MANUFACTURER\" },\r\n    { field: \"hardware_version\", header: \"HARDWARE VERSION\" },\r\n    { field: \"commision_date\", header: \"COMMISSION DATE\" },\r\n    { field: \"decommision_date\", header: \"DECOMMISSION DATE\" },\r\n    { field: \"cycle\", header: \"Cycle\" },\r\n  ];\r\n  const pages = true;\r\n  return (\r\n    <>\r\n      <div id=\"scroll-cards\">\r\n        <div className=\"mt-3 ml-4 mr-4\">\r\n          <DataCard\r\n            name=\"company\"\r\n            id=\"device\"\r\n            url=\"dashboard/device/status\"\r\n            data={company}\r\n            click={click}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div id=\"table\">\r\n        <div className=\"mt-3 ml-4 mr-4\">\r\n          <Band\r\n            name=\"Device Name\"\r\n            location=\"location\"\r\n            status=\"status\"\r\n            id={{ company: TraceBackId }}\r\n            selectedName={cname}\r\n            selectedLocation={clocation}\r\n            selectedStatus={cstatus}\r\n            url=\"dashboard/device/status\"\r\n          />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/company/:companyname\"\r\n              render={(props) => (\r\n                <Table\r\n                  tableData={data}\r\n                  filtericon={icon}\r\n                  {...props}\r\n                  refs={dt}\r\n                  columns={columns}\r\n                  columns2={columns2}\r\n                  columns3={columns3}\r\n                  type=\"single\"\r\n                  select={deviceClick}\r\n                  page={pages}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/:device/:innertable\"\r\n              render={(props) => (\r\n                <Table\r\n                  tableData={data}\r\n                  {...props}\r\n                  columns={columns1}\r\n                  columns2={columns2}\r\n                  columns3={columns3}\r\n                  rowExpander={expander}\r\n                  row={innerData}\r\n                  page={pages}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\device.js",["97","98"],"/* eslint-disable no-sequences */\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport DataCard from \"../components/DataCard\";\r\nimport Table from \"../components/table\";\r\nimport Band from \"../components/band\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchDataCard } from \"../redux/action\";\r\nimport { Route, Switch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { fetchTable } from \"../redux/action\";\r\nimport _ from \"lodash\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { Column } from \"primereact/column\";\r\nimport getUnique from \"../pages/utils/removeDuplicates\";\r\nimport apconfig from \"../config/apconfig\";\r\n\r\nexport default function Device(props) {\r\n  const device = useSelector((state) => state.dataCard.device);\r\n  const tableData = useSelector((state) => state.table.data);\r\n  const innerTableData = useSelector((state) => state.table.data2);\r\n  const [dname, setDname] = useState(\"ALL\");\r\n  const [dlocation, setDlocation] = useState(\"ALL\");\r\n  const [dstatus, setDstatus] = useState(\"ALL\");\r\n  const [item, setItem] = useState(null);\r\n  const [filter, setFilter] = useState(false);\r\n  const [filterData, setFilterData] = useState([]);\r\n  const [TraceBackId, setTraceBackId] = useState(\"\");\r\n\r\n  let dt = useRef(null);\r\n\r\n  const rowClick = (e) => {\r\n    return (\r\n      setDname(e.data.name),\r\n      setDlocation(e.data.location),\r\n      setDstatus(e.data.status)\r\n    );\r\n  };\r\n\r\n  const click = (d) => {\r\n    setTraceBackId(d);\r\n    setDname(\"ALL\");\r\n    setDlocation(\"ALL\");\r\n    setDstatus(\"ALL\");\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const locate = useLocation();\r\n  const pathItems = locate.pathname.split(\"/\");\r\n  useEffect(() => {\r\n    dispatch(fetchDataCard(\"dashboard/device/inventory\", \"device\"));\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    if (_.isEmpty(device)) {\r\n    } else {\r\n      dispatch(\r\n        fetchTable(\"dashboard/company/status\", { device: device[0].name })\r\n      );\r\n      setTraceBackId(device[0].name);\r\n      history.push(`/device/${device[0].name}`);\r\n    }\r\n  }, [device, dispatch, history]);\r\n  useEffect(() => {\r\n    \r\n      apconfig\r\n        .post(\"dashboard/company/status\", { device: pathItems[2] })\r\n        .then((e) => setFilterData(e.data))\r\n        .catch((e) => console.log(e));\r\n    \r\n  }, [pathItems[2]]);\r\n  const uniqueName = getUnique(filterData, \"name\");\r\n  const uniqueLoc = getUnique(filterData, \"location\");\r\n  const uniqueStatus = getUnique(filterData, \"status\");\r\n\r\n  const name = uniqueName.map((a) => {\r\n    return a.name;\r\n  });\r\n\r\n  const location = uniqueLoc.map((loc) => {\r\n    return loc.location;\r\n  });\r\n\r\n  const status = uniqueStatus.map((status) => {\r\n    return status.status;\r\n  });\r\n\r\n  const onFilterNameChange = (event) => {\r\n    dt.current.filter(event.value, \"name\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const onFilterLocationChange = (event) => {\r\n    dt.current.filter(event.value, \"location\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const onFilterStatusChange = (event) => {\r\n    dt.current.filter(event.value, \"status\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const expander = (\r\n    <Column expander className=\"expander\" style={{ width: \"3em\" }} />\r\n  );\r\n  const dropDownFilter = (options, onChange) => {\r\n    return (\r\n      <Dropdown\r\n        value={item}\r\n        options={options}\r\n        onChange={onChange}\r\n        placeholder=\"search\"\r\n        className=\"p-column-filter\"\r\n        showClear\r\n      />\r\n    );\r\n  };\r\n\r\n  const icon = (\r\n    <i\r\n      className=\"pi pi-filter\"\r\n      style={{\r\n        fontSize: \"10px\",\r\n        cursor: \"pointer\",\r\n        paddingLeft: \"50px\",\r\n      }}\r\n      onClick={() => setFilter(!filter)}\r\n    ></i>\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      field: \"name\",\r\n      header: \"NAME\",\r\n      filterElement: dropDownFilter(name, onFilterNameChange),\r\n      filter: filter,\r\n    },\r\n    {\r\n      field: \"location\",\r\n      header: \"LOCATION\",\r\n      filterElement: dropDownFilter(location, onFilterLocationChange),\r\n      filter: filter,\r\n    },\r\n    {\r\n      field: \"status\",\r\n      header: \"STATUS\",\r\n      filterElement: dropDownFilter(status, onFilterStatusChange),\r\n      filter: filter,\r\n    },\r\n    { field: \"count\", header: \"COUNT\" },\r\n  ];\r\n\r\n  const columns1 = [\r\n    { field: \"machine_id\", header: \"MACHINE ID\", filter: false },\r\n    { field: \"installation_id\", header: \"CUSTOM ID\", filter: false },\r\n    {\r\n      field: \"installation_date\",\r\n      header: \"UPDATE DATE\",\r\n      filter: false,\r\n    },\r\n    { field: \"location\", header: \"LOCATION\", filter: false },\r\n    { field: \"version\", header: \"VERSION\" },\r\n    { field: \"cycle\", header: \"CYCLE\" },\r\n  ];\r\n\r\n  const columns2 = [\r\n    { field: \"installed_id\", header: \" CUSTOM ID\" },\r\n    { field: \"installed_date\", header: \"UPDATE DATE\" },\r\n    { field: \"name\", header: \"COMPANY\" },\r\n    { field: \"location\", header: \"LOCATION\" },\r\n    { field: \"status\", header: \"STATUS\" },\r\n    { field: \"version\", header: \"VERSION\" },\r\n    { field: \"comments\", header: \"COMMENTS\" },\r\n  ];\r\n\r\n  const pages = true;\r\n\r\n  return (\r\n    <>\r\n      <div id=\"scroll-cards\">\r\n        <div className=\"mt-3 ml-4 mr-4\">\r\n          <DataCard\r\n            name=\"device\"\r\n            id=\"company\"\r\n            url=\"dashboard/company/status\"\r\n            data={device}\r\n            click={click}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div id=\"table\">\r\n        <div className=\" mt-3 ml-4 mr-4\">\r\n          <Band\r\n            name=\"Company Name\"\r\n            location=\"location\"\r\n            status=\"status\"\r\n            id={{ device: TraceBackId }}\r\n            selectedName={dname}\r\n            selectedLocation={dlocation}\r\n            selectedStatus={dstatus}\r\n            url=\"dashboard/company/status\"\r\n          />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/device/:deviceName\"\r\n              render={(props) => (\r\n                <Table\r\n                  tableData={tableData}\r\n                  filtericon={icon}\r\n                  {...props}\r\n                  refs={dt}\r\n                  columns={columns}\r\n                  columns2={columns2}\r\n                  type=\"single\"\r\n                  select={rowClick}\r\n                  page={pages}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/:device/:innertable\"\r\n              render={(props) => (\r\n                <Table\r\n                  tableData={tableData}\r\n                  {...props}\r\n                  columns={columns1}\r\n                  columns2={columns2}\r\n                  // columns3={columns3}\r\n                  rowExpander={expander}\r\n                  row={innerTableData}\r\n                  page={pages}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\search.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\HomePage.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\reducer.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\reducer.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\action.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\action.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\components\\DataCard.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\components\\Nav.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\components\\band.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\components\\SideNav.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\utils\\removeDuplicates.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\components\\table.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\config\\apconfig.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\type.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\type.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\action.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\components\\innerTable.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":65,"column":6,"nodeType":"105","endLine":65,"endColumn":20,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":65,"column":7,"nodeType":"108","endLine":65,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":69,"column":6,"nodeType":"105","endLine":69,"endColumn":20,"suggestions":"109"},{"ruleId":"103","severity":1,"message":"107","line":69,"column":7,"nodeType":"108","endLine":69,"endColumn":19},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pathItems'. Either include it or remove the dependency array.","ArrayExpression",["112"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},"Update the dependencies array to be: [pathItems]",{"range":"117","text":"118"},{"range":"119","text":"118"},[2292,2306],"[pathItems]",[2354,2368]]