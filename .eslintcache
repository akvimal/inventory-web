[{"E:\\Project\\InventoryApp\\inventory-web\\src\\index.js":"1","E:\\Project\\InventoryApp\\inventory-web\\src\\App.js":"2","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\reducer.js":"3","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\HomePage.js":"4","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\search.js":"5","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\reducer.js":"6","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\company.js":"7","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\reducer.js":"8","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\device.js":"9","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\Nav.js":"10","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\type.js":"11","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\band.js":"12","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\action.js":"13","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\action.js":"14","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\DataCard.js":"15","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\SideNav.js":"16","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\table.js":"17","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\type.js":"18","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\action.js":"19","E:\\Project\\InventoryApp\\inventory-web\\src\\config\\apconfig.js":"20"},{"size":519,"mtime":1608120828589,"results":"21","hashOfConfig":"22"},{"size":768,"mtime":1608719889810,"results":"23","hashOfConfig":"22"},{"size":479,"mtime":1608719889820,"results":"24","hashOfConfig":"22"},{"size":324,"mtime":1608120828621,"results":"25","hashOfConfig":"22"},{"size":1382,"mtime":1609153983439,"results":"26","hashOfConfig":"22"},{"size":687,"mtime":1608719889819,"results":"27","hashOfConfig":"22"},{"size":5909,"mtime":1609153228499,"results":"28","hashOfConfig":"22"},{"size":787,"mtime":1609146246514,"results":"29","hashOfConfig":"22"},{"size":5878,"mtime":1609151592085,"results":"30","hashOfConfig":"22"},{"size":795,"mtime":1608187360396,"results":"31","hashOfConfig":"22"},{"size":195,"mtime":1608120828636,"results":"32","hashOfConfig":"22"},{"size":706,"mtime":1609129347362,"results":"33","hashOfConfig":"22"},{"size":68,"mtime":1608719889817,"results":"34","hashOfConfig":"22"},{"size":889,"mtime":1608719889820,"results":"35","hashOfConfig":"22"},{"size":2392,"mtime":1609140476382,"results":"36","hashOfConfig":"22"},{"size":1294,"mtime":1608719889812,"results":"37","hashOfConfig":"22"},{"size":8409,"mtime":1609151521236,"results":"38","hashOfConfig":"22"},{"size":177,"mtime":1608719889822,"results":"39","hashOfConfig":"22"},{"size":806,"mtime":1608719889818,"results":"40","hashOfConfig":"22"},{"size":187,"mtime":1608120828589,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"yu3cy0",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"E:\\Project\\InventoryApp\\inventory-web\\src\\index.js",[],["89","90"],"E:\\Project\\InventoryApp\\inventory-web\\src\\App.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\reducer.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\HomePage.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\search.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\reducer.js",["91"],"import {\r\n  FETCH_DATACARD_FAILURE,\r\n  FETCH_DATACARD_REQUEST,\r\n  FETCH_DATACARD_SUCCESS,\r\n} from \"./type\";\r\n\r\nexport default (\r\n  state = {\r\n    isLoading: false,\r\n    error: null,\r\n    data: [],\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case FETCH_DATACARD_REQUEST:\r\n      return { ...state, isLoading: true };\r\n    case FETCH_DATACARD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        error: null,\r\n      };\r\n    case FETCH_DATACARD_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload,\r\n        data: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\company.js",["92"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport DataCard from \"../components/DataCard\";\r\nimport Table from \"../components/table\";\r\nimport Band from \"../components/band\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchDataCard } from \"../redux/action\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { fetchTable } from \"../redux/table/action\";\r\nimport _ from \"lodash\";\r\nimport { Column } from \"primereact/column\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\n\r\nexport default function Company() {\r\n  const [cname, setCname] = useState(null);\r\n  const [clocation, setClocation] = useState(null);\r\n  const [cstatus, setCstatus] = useState(null);\r\n  const deviceClick = (e) => {\r\n    return (\r\n      setCname(e.data.device_name),\r\n      setClocation(e.data.location),\r\n      setCstatus(e.data.status)\r\n    );\r\n  };\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchDataCard(\"dashboard/company/devices\"));\r\n  }, [dispatch]);\r\n\r\n  const cardData = useSelector((state) => state.dataCard.data);\r\n  const tableData = useSelector((state) => state.table.data);\r\n\r\n  useEffect(() => {\r\n    if (_.isEmpty(cardData)) {\r\n      dispatch(\r\n        fetchTable(\"dashboard/device/status\", { company: cardData[0].name })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        fetchTable(\"dashboard/device/status\", { company: cardData[0].name })\r\n      );\r\n      history.push(`/company/${cardData[0].name}`);\r\n    }\r\n  }, [cardData]);\r\n  const [item, setItem] = useState(null);\r\n  let dt = useRef(null);\r\n  const getUnique = (arr, comp) => {\r\n    const unique = arr\r\n      .map((e) => e[comp])\r\n      .map((e, i, final) => final.indexOf(e) === i && i)\r\n      .filter((e) => arr[e])\r\n      .map((e) => arr[e]);\r\n    return unique;\r\n  };\r\n\r\n  const uniqueName = getUnique(tableData, \"name\");\r\n  const uniqueLoc = getUnique(tableData, \"location\");\r\n  const uniqueStatus = getUnique(tableData, \"status\");\r\n\r\n  const location = uniqueName.map((a) => {\r\n    return a.location;\r\n  });\r\n\r\n  const deviceName = uniqueLoc.map((d) => {\r\n    return d.device_name;\r\n  });\r\n\r\n  const status = uniqueStatus.map((status) => {\r\n    return status.status;\r\n  });\r\n\r\n  const onFilterLocationChange = (event) => {\r\n    dt.current.filter(event.value, \"location\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const onFilterDeviceNameChange = (event) => {\r\n    dt.current.filter(event.value, \"device_name\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const onFilterStatusChange = (event) => {\r\n    dt.current.filter(event.value, \"status\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const dropDownFilter = (options, onChange) => {\r\n    return (\r\n      <Dropdown\r\n        value={item}\r\n        options={options}\r\n        onChange={onChange}\r\n        placeholder=\"search\"\r\n        className=\"p-column-filter\"\r\n        showClear\r\n      />\r\n    );\r\n  };\r\n  const expander = <Column expander style={{ width: \"3em\" }} />;\r\n  const [filter, setFilter] = useState(false);\r\n  const icon = (\r\n    <i\r\n      className=\"pi pi-filter\"\r\n      style={{\r\n        fontSize: \"10px\",\r\n        cursor: \"pointer\",\r\n        paddingLeft: \"50px\",\r\n      }}\r\n      onClick={() => setFilter(!filter)}\r\n    ></i>\r\n  );\r\n  const columns = [\r\n    {\r\n      field: \"location\",\r\n      header: \"Location\",\r\n      filter: filter,\r\n      filterElement: dropDownFilter(location, onFilterLocationChange),\r\n    },\r\n    {\r\n      field: \"device_name\",\r\n      header: \"Device Name\",\r\n      filter: filter,\r\n      filterElement: dropDownFilter(deviceName, onFilterDeviceNameChange),\r\n    },\r\n    {\r\n      field: \"status\",\r\n      header: \"Status\",\r\n      filter: filter,\r\n      filterElement: dropDownFilter(status, onFilterStatusChange),\r\n    },\r\n    { field: \"count\", header: \"Count\" },\r\n  ];\r\n\r\n  const columns1 = [\r\n    { field: \"machine_id\", header: \"Machine Id\" },\r\n    { field: \"installation_id\", header: \"Installation Id\" },\r\n    { field: \"installation_date\", header: \"Uninstallation Date\" },\r\n    { field: \"location\", header: \"Location\" },\r\n    { field: \"uninstallation_date\", header: \"Uninstallation Date\" },\r\n  ];\r\n\r\n  const columns2 = [\r\n    { field: \"installation_id\", header: \"Installation ID\" },\r\n    { field: \"installation_date\", header: \"Installation Date\" },\r\n    { field: \"location\", header: \"Location\" },\r\n    { field: \"status\", header: \"Status\" },\r\n    { field: \"uninstallation_date\", header: \"Uninstallation_date\" },\r\n    { field: \"company\", header: \"Company\" },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div id=\"scroll-cards\">\r\n        <div className=\"mt-3 ml-4 mr-4\">\r\n          <DataCard name=\"company\" id=\"device\" url=\"dashboard/device/status\" />\r\n        </div>\r\n      </div>\r\n      <div id=\"table\">\r\n        <div className=\"mt-3 ml-4 mr-4\">\r\n          <Band\r\n            name=\"Device Name\"\r\n            location=\"location\"\r\n            status=\"status\"\r\n            selectedName={cname}\r\n            selectedLocation={clocation}\r\n            selectedStatus={cstatus}\r\n          />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/company/:companyname\"\r\n              render={(props) => (\r\n                <Table\r\n                  filtericon={icon}\r\n                  {...props}\r\n                  refs={dt}\r\n                  columns={columns}\r\n                  columns2={columns2}\r\n                  type=\"single\"\r\n                  select={deviceClick}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/:device/:innertable\"\r\n              render={(props) => (\r\n                <Table\r\n                  {...props}\r\n                  columns={columns1}\r\n                  columns2={columns2}\r\n                  rowExpander={expander}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\reducer.js",["93"],"import {\r\n    FETCH_TABLE_FAILURE,\r\n    FETCH_TABLE_REQUEST,\r\n    FETCH_TABLE_SUCCESS,\r\n  } from \"./type\";\r\n  \r\n  export default (\r\n    state = {\r\n      isLoading: false,\r\n      error: null,\r\n      data:[],\r\n      data2:[]\r\n    },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case FETCH_TABLE_REQUEST:\r\n        return { ...state, isLoading: true };\r\n      case FETCH_TABLE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          data: action.payload,\r\n          data2:action.payload,\r\n          error: null,\r\n        };\r\n      case FETCH_TABLE_FAILURE:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          error: action.payload,\r\n          data: [],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","E:\\Project\\InventoryApp\\inventory-web\\src\\pages\\device.js",["94"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport DataCard from \"../components/DataCard\";\r\nimport Table from \"../components/table\";\r\nimport Band from \"../components/band\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchDataCard } from \"../redux/action\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { fetchTable } from \"../redux/action\";\r\nimport _ from \"lodash\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { Column } from \"primereact/column\";\r\n\r\nexport default function Device() {\r\n  let dt = useRef(null);\r\n\r\n  const [dname, setDname] = useState(null);\r\n  const [dlocation, setDlocation] = useState(null);\r\n  const [dstatus, setDstatus] = useState(null);\r\n\r\n  const rowClick = (e) => {\r\n    return (\r\n      setDname(e.data.name),\r\n      setDlocation(e.data.location),\r\n      setDstatus(e.data.status)\r\n    );\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchDataCard(\"dashboard/device/inventory\"));\r\n  }, [dispatch]);\r\n\r\n  const cardData = useSelector((state) => state.dataCard.data);\r\n  const tableData = useSelector((state) => state.table.data);\r\n\r\n  useEffect(() => {\r\n    if (_.isEmpty(cardData)) {\r\n    } else {\r\n      dispatch(\r\n        fetchTable(\"dashboard/company/status\", { device: cardData[0].name })\r\n      );\r\n      history.push(`/device/${cardData[0].name}`);\r\n    }\r\n  }, [cardData]);\r\n\r\n  const [item, setItem] = useState(null);\r\n\r\n  const getUnique = (arr, comp) => {\r\n    const unique = arr\r\n      .map((e) => e[comp])\r\n      .map((e, i, final) => final.indexOf(e) === i && i)\r\n      .filter((e) => arr[e])\r\n      .map((e) => arr[e]);\r\n    return unique;\r\n  };\r\n\r\n  const uniqueName = getUnique(tableData, \"name\");\r\n  const uniqueLoc = getUnique(tableData, \"location\");\r\n  const uniqueStatus = getUnique(tableData, \"status\");\r\n\r\n  const name = uniqueName.map((a) => {\r\n    return a.name;\r\n  });\r\n\r\n  const location = uniqueLoc.map((loc) => {\r\n    return loc.location;\r\n  });\r\n\r\n  const status = uniqueStatus.map((status) => {\r\n    return status.status;\r\n  });\r\n\r\n  const onFilterNameChange = (event) => {\r\n    dt.current.filter(event.value, \"name\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const onFilterLocationChange = (event) => {\r\n    dt.current.filter(event.value, \"location\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const onFilterStatusChange = (event) => {\r\n    dt.current.filter(event.value, \"status\", \"equals\");\r\n    setItem(event.value);\r\n  };\r\n  const expander = <Column expander style={{ width: \"3em\" }} />;\r\n  const dropDownFilter = (options, onChange) => {\r\n    return (\r\n      <Dropdown\r\n        value={item}\r\n        options={options}\r\n        onChange={onChange}\r\n        placeholder=\"search\"\r\n        className=\"p-column-filter\"\r\n        showClear\r\n      />\r\n    );\r\n  };\r\n  const [filter, setFilter] = useState(false);\r\n  const icon = (\r\n    <i\r\n      className=\"pi pi-filter\"\r\n      style={{\r\n        fontSize: \"10px\",\r\n        cursor: \"pointer\",\r\n        paddingLeft: \"50px\",\r\n      }}\r\n      onClick={() => setFilter(!filter)}\r\n    ></i>\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      field: \"name\",\r\n      header: \"Name\",\r\n      filterElement: dropDownFilter(name, onFilterNameChange),\r\n      filter: filter,\r\n    },\r\n    {\r\n      field: \"location\",\r\n      header: \"Location\",\r\n      filterElement: dropDownFilter(location, onFilterLocationChange),\r\n      filter: filter,\r\n    },\r\n    {\r\n      field: \"status\",\r\n      header: \"Status\",\r\n      filterElement: dropDownFilter(status, onFilterStatusChange),\r\n      filter: filter,\r\n    },\r\n    { field: \"count\", header: \"Count\" },\r\n  ];\r\n\r\n  const columns1 = [\r\n    { field: \"machine_id\", header: \"Machine Id\", filter: false },\r\n    { field: \"installation_id\", header: \"Installation Id\", filter: false },\r\n    {\r\n      field: \"installation_date\",\r\n      header: \"Uninstallation Date\",\r\n      filter: false,\r\n    },\r\n    { field: \"location\", header: \"Location\", filter: false },\r\n    {\r\n      field: \"uninstallation_date\",\r\n      header: \"Uninstallation Date\",\r\n      filter: false,\r\n    },\r\n  ];\r\n\r\n  const columns2 = [\r\n    { field: \"installation_id\", header: \"Installation ID\" },\r\n    { field: \"installation_date\", header: \"Installation Date\" },\r\n    { field: \"location\", header: \"Location\" },\r\n    { field: \"status\", header: \"Status\" },\r\n    { field: \"uninstallation_date\", header: \"Uninstallation_date\" },\r\n    { field: \"company\", header: \"Company\" },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div id=\"scroll-cards\">\r\n        <div className=\"mt-3 ml-4 mr-4\">\r\n          <DataCard name=\"device\" id=\"company\" url=\"dashboard/company/status\" />\r\n        </div>\r\n      </div>\r\n      <div id=\"table\">\r\n        <div className=\" mt-3 ml-4 mr-4\">\r\n          <Band\r\n            name=\"Company Name\"\r\n            location=\"location\"\r\n            status=\"status\"\r\n            selectedName={dname}\r\n            selectedLocation={dlocation}\r\n            selectedStatus={dstatus}\r\n          />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/device/:BaconBit\"\r\n              render={(props) => (\r\n                <Table\r\n                  filtericon={icon}\r\n                  {...props}\r\n                  refs={dt}\r\n                  columns={columns}\r\n                  columns2={columns2}\r\n                  type=\"single\"\r\n                  select={rowClick}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/:device/:innertable\"\r\n              render={(props) => (\r\n                <Table\r\n                  {...props}\r\n                  columns={columns1}\r\n                  columns2={columns2}\r\n                  rowExpander={expander}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\Nav.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\type.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\components\\band.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\action.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\action.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\components\\DataCard.js",["95","96"],"import React, { useEffect } from \"react\";\r\nimport { Card } from \"primereact/card\";\r\nimport { ScrollPanel } from \"primereact/scrollpanel\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport { fetchTable } from \"../redux/action\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function DataCard(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const data = useSelector((state) => state.dataCard.data);\r\n  let match = useRouteMatch();\r\n  const location = useLocation();\r\n  const pathItems = location.pathname.split(\"/\");\r\n  const currentCard = pathItems.length ? pathItems[2] : \"\";\r\n  return (\r\n    <>\r\n      <p className=\"title\">{props.name}</p>\r\n      <hr className=\"divider-line\" />\r\n      <ScrollPanel>\r\n        <div className=\"p-d-flex mt-3\">\r\n          {data.map(({ name, status }) => {\r\n            const check =\r\n              props.name === \"device\"\r\n                ? {\r\n                    device: name,\r\n                  }\r\n                : {\r\n                    company: name,\r\n                  };\r\n            return (\r\n              <Link\r\n                to={{ pathname: `${match.url}/${name}` }}\r\n                className=\"link\"\r\n                key={name}\r\n                onClick={() => {\r\n                  dispatch(fetchTable(props.url, check));\r\n                  localStorage.setItem(\"device name\", name);\r\n                }}\r\n              >\r\n                <div className=\"p-mr-4\" key={name}>\r\n                  <Card\r\n                    title={name}\r\n                    className={currentCard === name ? \"card-active\" : \"p-card\"}\r\n                  >\r\n                    <div className=\"p-d-flex\" key={name}>\r\n                      {status.map((e) => {\r\n                        return (\r\n                          <div className=\"inner-content mr-2 mt-3\" key={e.name}>\r\n                            <p className=\"inner-content-title m-0\">{e.name}</p>\r\n                            <p className=\"inner-content-title-1 m-1 ml-0\">\r\n                              {e.count}\r\n                            </p>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </Card>\r\n                </div>\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      </ScrollPanel>\r\n    </>\r\n  );\r\n}\r\n","E:\\Project\\InventoryApp\\inventory-web\\src\\components\\SideNav.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\components\\table.js",["97","98","99","100","101"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchTable } from \"../redux/action\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Table(props) {\r\n  const table = [\r\n    {\r\n      machine_id: \"F4:5A:5C:F8:59:BC\",\r\n      installation_id: \"AU-T0001\",\r\n      installation_date: \"18-09-2020\",\r\n      location: \"Auburn\",\r\n      uninstallation_date: \"18-09-2020\",\r\n      // name: \"company1\",\r\n      // location: \"Beavercreek\",\r\n      // status: \"installed\",\r\n      // count: 20,\r\n      history: [\r\n        {\r\n          installation_id: 1,\r\n          installation_date: \"20/10/2020\",\r\n          location: \"Rio De Janeiro\",\r\n          status: \"Installed\",\r\n          uninstallation_date: \"30/10/2020\",\r\n          company: \"Nulla Tempor Odio\",\r\n        },\r\n        {\r\n          installation_id: 2,\r\n          installation_date: \"20/10/2020\",\r\n          location: \"Tokiyo\",\r\n          status: \"Installed\",\r\n          uninstallation_date: \"30/10/2020\",\r\n          company: \"Nulla Tempor Odio\",\r\n        },\r\n        {\r\n          installation_id: 3,\r\n          installation_date: \"20/10/2020\",\r\n          location: \"Manila\",\r\n          status: \"Installed\",\r\n          uninstallation_date: \"30/10/2020\",\r\n          company: \"Nulla Tempor Odio\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      machine_id: \"B4:5A:5C:F8:59:BC\",\r\n      installation_id: \"AU-T0002\",\r\n      installation_date: \"13-09-2020\",\r\n      location: \"Auburn\",\r\n      uninstallation_date: \"19-09-2020\",\r\n      // name: \"company1\",\r\n      // location: \"Beavercreek\",\r\n      // status: \"installed\",\r\n      // count: 20,\r\n      history: [\r\n        {\r\n          installation_id: 4,\r\n          installation_date: \"20/10/2020\",\r\n          location: \"Rio De Janeiro\",\r\n          status: \"Installed\",\r\n          uninstallation_date: \"30/10/2020\",\r\n          company: \"Nulla Tempor Odio\",\r\n        },\r\n        {\r\n          installation_id: 5,\r\n          installation_date: \"20/10/2020\",\r\n          location: \"Tokiyo\",\r\n          status: \"Installed\",\r\n          uninstallation_date: \"30/10/2020\",\r\n          company: \"Nulla Tempor Odio\",\r\n        },\r\n        {\r\n          installation_id: 6,\r\n          installation_date: \"20/10/2020\",\r\n          location: \"Manila\",\r\n          status: \"Installed\",\r\n          uninstallation_date: \"30/10/2020\",\r\n          company: \"Nulla Tempor Odio\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      machine_id: \"P4:5A:5C:F8:59:BC\",\r\n      installation_id: \"AU-T0003\",\r\n      installation_date: \"18-09-2020\",\r\n      location: \"Auburn\",\r\n      uninstallation_date: \"18-09-2020\",\r\n      // name: \"company1\",\r\n      // location: \"Beavercreek\",\r\n      // status: \"installed\",\r\n      // count: 20,\r\n      history: [\r\n        {\r\n          installation_id: 7,\r\n          installation_date: \"20/10/2020\",\r\n          location: \"Rio De Janeiro\",\r\n          status: \"Installed\",\r\n          uninstallation_date: \"30/10/2020\",\r\n          company: \"Nulla Tempor Odio\",\r\n        },\r\n        {\r\n          installation_id: 8,\r\n          installation_date: \"20/10/2020\",\r\n          location: \"Tokiyo\",\r\n          status: \"Installed\",\r\n          uninstallation_date: \"30/10/2020\",\r\n          company: \"Nulla Tempor Odio\",\r\n        },\r\n        {\r\n          installation_id: 9,\r\n          installation_date: \"20/10/2020\",\r\n          location: \"Manila\",\r\n          status: \"Installed\",\r\n          uninstallation_date: \"30/10/2020\",\r\n          company: \"Nulla Tempor Odio\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      machine_id: \"A4:5A:5C:F8:59:BC\",\r\n      installation_id: \"AU-T0001\",\r\n      installation_date: \"18-09-2020\",\r\n      location: \"Auburn\",\r\n      uninstallation_date: \"18-09-2020\",\r\n      // name: \"company1\",\r\n      // location: \"Beavercreek\",\r\n      // status: \"installed\",\r\n      // count: 20,\r\n      history: [\r\n        {\r\n          installation_id: 10,\r\n          installation_date: \"20/10/2020\",\r\n          location: \"Rio De Janeiro\",\r\n          status: \"Installed\",\r\n          uninstallation_date: \"30/10/2020\",\r\n          company: \"Nulla Tempor Odio\",\r\n        },\r\n        {\r\n          installation_id: 11,\r\n          installation_date: \"20/10/2020\",\r\n          location: \"Tokiyo\",\r\n          status: \"Installed\",\r\n          uninstallation_date: \"30/10/2020\",\r\n          company: \"Nulla Tempor Odio\",\r\n        },\r\n        {\r\n          installation_id: 12,\r\n          installation_date: \"20/10/2020\",\r\n          location: \"Manila\",\r\n          status: \"Installed\",\r\n          uninstallation_date: \"30/10/2020\",\r\n          company: \"Nulla Tempor Odio\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      machine_id: \"Q4:5A:5C:F8:59:BC\",\r\n      installation_id: \"AU-T0001\",\r\n      installation_date: \"18-09-2020\",\r\n      location: \"Auburn\",\r\n      uninstallation_date: \"18-09-2020\",\r\n      // name: \"company1\",\r\n      // location: \"Beavercreek\",\r\n      // status: \"installed\",\r\n      // count: 20,\r\n      history: [\r\n        {\r\n          installation_id: 13,\r\n          installation_date: \"20/10/2020\",\r\n          location: \"Rio De Janeiro\",\r\n          status: \"Installed\",\r\n          uninstallation_date: \"30/10/2020\",\r\n          company: \"Nulla Tempor Odio\",\r\n        },\r\n        {\r\n          installation_id: 14,\r\n          installation_date: \"20/10/2020\",\r\n          location: \"Tokiyo\",\r\n          status: \"Installed\",\r\n          uninstallation_date: \"30/10/2020\",\r\n          company: \"Nulla Tempor Odio\",\r\n        },\r\n        {\r\n          installation_id: 15,\r\n          installation_date: \"20/10/2020\",\r\n          location: \"Manila\",\r\n          status: \"Installed\",\r\n          uninstallation_date: \"30/10/2020\",\r\n          company: \"Nulla Tempor Odio\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const data = useSelector((state) => state.table.data);\r\n  const data2 = useSelector((state) => state.table.data2);\r\n\r\n  // const [filter, setFilter] = useState(false);\r\n\r\n  const [state, setstate] = useState([]);\r\n\r\n  const nameBodyTemplate = (rowData) => {\r\n    return (\r\n      <React.Fragment>\r\n        <span className=\"p-column-title\">\r\n          {rowData}\r\n          {props.filtericon}\r\n        </span>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  const dynamicColumns = props.columns.map((col, i) => {\r\n    return (\r\n      <Column\r\n        key={col.field}\r\n        field={col.field}\r\n        header={nameBodyTemplate(col.header)}\r\n        filter={col.filter}\r\n        filterElement={col.filterElement}\r\n      />\r\n    );\r\n  });\r\n\r\n  const dynamicColumns2 = props.columns.map((col, i) => {\r\n    return (\r\n      <Column\r\n        key={col.field}\r\n        field={col.field}\r\n        header={nameBodyTemplate(col.header)}\r\n        filter={col.filter}\r\n        filterElement={col.filterElement}\r\n      />\r\n    );\r\n  });\r\n  console.log(props);\r\n  const dynamicColumns3 = props.columns2.map((col, i) => {\r\n    return (\r\n      <Column\r\n        key={col.field}\r\n        field={col.field}\r\n        header={nameBodyTemplate(col.header)}\r\n      />\r\n    );\r\n  });\r\n\r\n  const rowExpansionTemplate = (data) => {\r\n    return (\r\n      <div>\r\n        <DataTable className=\"information\" value={data.history}>\r\n          {dynamicColumns3}\r\n        </DataTable>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ex = localStorage.getItem(\"device name\");\r\n\r\n  const onRowSelect = (e) => {\r\n    console.log(e);\r\n    history.push(`${props.match.url}/${e.data.device_name}`);\r\n    dispatch(\r\n      fetchTable(\"dashboard/device/location\", {\r\n        company: e.data.name || ex,\r\n        device: \"BaconBit\" || e.data.device_name,\r\n      })\r\n    );\r\n    props.select(e);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DataTable\r\n        value={data}\r\n        ref={props.refs}\r\n        header=\"INVENTORY LIST\"\r\n        paginator\r\n        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink\"\r\n        currentPageReportTemplate=\"{first} to {last} \"\r\n        rows={5}\r\n        expandedRows={state}\r\n        onRowToggle={(e) => setstate(e.data)}\r\n        rowExpansionTemplate={rowExpansionTemplate}\r\n        selectionMode={props.type}\r\n        onRowSelect={(e) => onRowSelect(e)}\r\n      >\r\n        {dynamicColumns}\r\n        {props.rowExpander}\r\n      </DataTable>\r\n    </>\r\n  );\r\n}\r\n","E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\table\\type.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\redux\\dataCard\\action.js",[],"E:\\Project\\InventoryApp\\inventory-web\\src\\config\\apconfig.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":7,"column":1,"nodeType":"108","endLine":35,"endColumn":3},{"ruleId":"109","severity":1,"message":"110","line":44,"column":6,"nodeType":"111","endLine":44,"endColumn":16,"suggestions":"112"},{"ruleId":"106","severity":1,"message":"107","line":7,"column":3,"nodeType":"108","endLine":37,"endColumn":5},{"ruleId":"109","severity":1,"message":"110","line":46,"column":6,"nodeType":"111","endLine":46,"endColumn":16,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"118","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":9},{"ruleId":"114","severity":1,"message":"115","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"119","line":1,"column":28,"nodeType":"116","messageId":"117","endLine":1,"endColumn":34},{"ruleId":"114","severity":1,"message":"120","line":9,"column":9,"nodeType":"116","messageId":"117","endLine":9,"endColumn":14},{"ruleId":"114","severity":1,"message":"121","line":202,"column":9,"nodeType":"116","messageId":"117","endLine":202,"endColumn":14},{"ruleId":"114","severity":1,"message":"122","line":230,"column":9,"nodeType":"116","messageId":"117","endLine":230,"endColumn":24},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["125"],["126"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'_' is defined but never used.","'useRef' is defined but never used.","'table' is assigned a value but never used.","'data2' is assigned a value but never used.","'dynamicColumns2' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"127","fix":"129"},"Update the dependencies array to be: [cardData, dispatch, history]",{"range":"130","text":"131"},{"range":"132","text":"131"},[1528,1538],"[cardData, dispatch, history]",[1440,1450]]